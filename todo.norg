* ( ) Code
  - ( ) add testing
  -- (_) change test tool to something else (*busted*'s messages are hard to read)
  -- ( ) add more test cases (copy from tree-sitter's)
  - (x) remove pandoc dependency
        use special `token(id, patt)` function to replace all `/ pandoc.Whatever`
        this function will be different if global `as_pandoc` option.
        if `as_pandoc == false`, `token` will be a table containing `id` and captured values.
        it is useful for debuging.
  - ( ) we can parse all line-ending with `whitespace ^ 0 * line_ending * whitespace ^ 0`
* ( ) implement custom pandoc reader
** (x) Layer 1
   - (x) Attached Modifiers
   - (x) Links (only URL type)
   - (x) Escape Char
** (x) Layer 2
   - (x) Nestable Detached Modifiers
   -- (x) ordered / unordered lists
   -- (x) quotes
   -- (?) attributes
          should this be in Layer 2?
   - (x) Headings
   - (=) Verbatim Ranged Tags
   -- (x) `@code`
   -- (=) `@document.meta`
          this would be done via standard library in future
   - (x) Delimiting Modifiers (like horizontal rules)
   - (x) Links (minus *timestamps*, *wikilinks*, *extendable links(=)*, *anchors*)
   -- (x) to File Location (`{:path/to/file:}`)
   -- (_) to Line Number
          see: {https://github.com/nvim-neorg/norg-specs/issues/22}[norg-specs#22]
   -- (x) to Detached Modifier
   --- (x) to *Structural Detached Modifiers* (= *headings*)
   --- (x) to *Range-able Detached Modifiers* (= *definitions*, *footnotes*)
   -- (x) to Custom Detached Modifiers
   --- (x) magic (`#`)
   --- (x) file (`/`)
   - (x) Link Modifier (the `:` thing)
** ( ) Layer 3
   - ( ) Links (*timestamps*, *wikilinks*)
   - (x) Inline Link Targets
   - ( ) Carryover Tags
   - (-) Detached Modifier Extensions
   - ( ) Detached Modifier Suffix
   - (x) Range-able Detached Modifiers (minus *table cells*)
   -- (x) Definition
   -- (x) Footnotes
   - (x) Link Modifier
** ( ) Layer 4
   - ( ) standard ranged tags (`\|comment`, etc.)
   - (?) table cells
         honestly, who use this?
   - (x) Free-form attached modifiers
   - ( ) ::
         Intersecting Modifiers
         This would enable code like:
         @code norg
         $ Term : definition
         @end
   - ( ) Attached Modifier Extensions
   - ( ) inline math / variable
** ( ) Layer 5
   - ( ) *macros*
       %TODO: add todos%
